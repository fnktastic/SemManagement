<ContentDialog
    x:Class="SemManagement.UWP.View.ContentDialogs.SendToStationContentDialog"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SemManagement.UWP.View.ContentDialogs"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    mc:Ignorable="d"
    Title="Send To Stations"
    x:Name="Me"
    PrimaryButtonText="Send"
    IsSecondaryButtonEnabled="False"
    CloseButtonText="Cancel"
    Background="{ThemeResource CustomAcrylicBrush}"
    DefaultButton="Primary">

    <Grid Width="450" MinHeight="700">
        <StackPanel HorizontalAlignment="Center"
                    VerticalAlignment="Center" Visibility="{x:Bind SendToStationViewModel.IsLoading, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVisibleOrCollapsed}}" >
            <ProgressRing IsActive="True" 
                      Height="70"
                      Width="70"
                      />
            <TextBlock Margin="0 10 0 0" Text="Fetching from server..." />
        </StackPanel>
        <Grid Grid.Column="2" Grid.Row="2" Visibility="{x:Bind SendToStationViewModel.IsLoading, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource InverseBoolToVisibilityConverter}, FallbackValue=Visible}">
            <Grid.RowDefinitions>
                <RowDefinition Height="32" />
                <RowDefinition Height="1*" />
                <RowDefinition Height="32" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="40" />
                    <ColumnDefinition Width="40" />
                    <ColumnDefinition Width="40" />
                </Grid.ColumnDefinitions>
                <TextBox Grid.Column="0"
                         Text="{x:Bind SendToStationViewModel.StationsSearchTerm, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         PlaceholderText="filter stations by name or #tag" />
                <Button Grid.Column="1">
                    <Button.Content>
                        <SymbolIcon Symbol="Pin" />
                    </Button.Content>
                    <Button.Flyout>
                        <Flyout>
                            <StackPanel Orientation="Horizontal">
                                <ToggleButton IsChecked="{x:Bind SendToStationViewModel.IsHighlight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{x:Bind SendToStationViewModel.HiglightAssignedCommand}">
                                    <ToggleButton.Content>
                                        <SymbolIcon Symbol="Pin" />
                                    </ToggleButton.Content>
                                </ToggleButton>
                                <ToggleButton IsChecked="{x:Bind SendToStationViewModel.IsUnHighlight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{x:Bind SendToStationViewModel.HiglightNotAssignedCommand}">
                                    <ToggleButton.Content>
                                        <SymbolIcon Symbol="UnPin" />
                                    </ToggleButton.Content>
                                </ToggleButton>
                                <Button Command="{x:Bind SendToStationViewModel.ResetHighlightCommand}">
                                    <Button.Content>
                                        <SymbolIcon Symbol="Refresh" />
                                    </Button.Content>
                                </Button>
                            </StackPanel>
                        </Flyout>
                    </Button.Flyout>
                </Button>
                <ToggleButton Grid.Column="2"
                              IsChecked="{x:Bind SendToStationViewModel.IsAllSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Click="ToggleButton_Click">
                    <ToggleButton.Content>
                        <SymbolIcon Symbol="SelectAll" />
                    </ToggleButton.Content>
                </ToggleButton>
                <Button Grid.Column="3">
                    <SymbolIcon Symbol="List" />
                    <Button.Flyout>
                        <Flyout>
                            <ListView Grid.Row="1" 
                                      MaxHeight="500"
                                      ItemsSource="{x:Bind SendToStationViewModel.SelectedStations, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      ScrollViewer.VerticalScrollBarVisibility="Auto"
                                      SelectionMode="None"
                                      >
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Name}" />
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </Flyout>
                    </Button.Flyout>
                </Button>
            </Grid>
            <ListView Grid.Row="1" ItemsSource="{x:Bind SendToStationViewModel.Stations, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectionMode="Multiple"
                          x:Name="stations"
                          SelectionChanged="Stations_SelectionChanged"
                          ScrollViewer.VerticalScrollBarVisibility="Auto"
                         >
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid x:Name="grid" Loaded="Grid_Loaded" HorizontalAlignment="Stretch">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="{Binding Name}" VerticalAlignment="Center" />
                            <Button Visibility="{Binding IsAssigned, Converter={StaticResource BoolToVisibleOrCollapsed}}"
                                    HorizontalAlignment="Right">
                                <i:Interaction.Behaviors>
                                    <core:DataTriggerBehavior Binding="{Binding IsAssigned}" ComparisonCondition="Equal" Value="true">
                                        <core:ChangePropertyAction PropertyName="Background" Value="#3F33BBEB" />
                                    </core:DataTriggerBehavior>
                                </i:Interaction.Behaviors>
                                <Button.Content>
                                    <SymbolIcon Symbol="Delete" />
                                </Button.Content>
                                <Button.Flyout>
                                    <Flyout>
                                        <StackPanel>
                                            <TextBlock Text="Are you sure?" VerticalAlignment="Center" />
                                            <Button Margin="0 5 5 0" 
                                                    HorizontalAlignment="Center"
                                                    Command="{Binding Path=SendToStationViewModel.RemovePlatlistFromStationCommand, ElementName=Me}"
                                                    CommandParameter="{Binding}">
                                                <Button.Content>
                                                    <SymbolIcon Symbol="Delete" />
                                                </Button.Content>
                                            </Button>
                                        </StackPanel>
                                    </Flyout>
                                </Button.Flyout>
                            </Button>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>
        </Grid>
    </Grid>
</ContentDialog>
